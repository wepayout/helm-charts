# Default values for deployment.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ""
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# This is here so you don't have to worry about it.
imagePullSecrets:
  - name: "docker-registry"

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 0%
    maxSurge: 50%

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  enabled: true
  type: ClusterIP
  primaryPort:
    number: 80
    targetPort: http
    protocol: TCP
    name: http
  additionalPorts: []

virtualServices:
  enabled: false
  services:
    []
    # - nameSuffix: ""
    #   hosts:
    #     - chart-example.local
    #   gateways:
    #     - gateway-example.local
    #   http:
    #     - match:
    #         - uri:
    #             prefix: "/"
    #       route:
    #         - destination:
    #             port:
    #               number: 80
    #             host: chart-example.local

destinationRules:
  enabled: false
  rules:
    []
    # - nameSuffix: ""
    #   host: ""
    #   trafficPolicy: {}
    #   subsets: []
    #   exportsTo: []

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  # targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
  metrics:
    []
    # - type: Resource
    #   resource:
    #     name: memory
    #     targetAverageUtilization: 70

nodeSelector: {}

tolerations: []

affinity: {}

extraEnv: []

extraEnvFrom: []

overrideCommand: []

extraArgs: []

initContainers: []
additionalContainers: []

livenessProbe:
  httpGet:
    path: /health-check/
    port: http
  initialDelaySeconds: 5
  timeoutSeconds: 5
  periodSeconds: 15

readinessProbe:
  httpGet:
    path: /health-check/
    port: http
  initialDelaySeconds: 5
  timeoutSeconds: 5
  periodSeconds: 15

startupProbe: ~

containerPorts:
  - name: http
    containerPort: 80
    protocol: TCP

volumes: []

volumeMounts: []

extraObjects: []

serviceMonitor:
  enabled: false
  endpoints:
    - honorLabels: true
      path: /stats/prometheus
      scheme: http
      targetPort: http-envoy-prom
    - honorLabels: true
      path: /stats/prometheus
      scheme: http
      targetPort: 80
